{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","App/components/base/RegionUpSert.js","App/components/base/RegionListar.js","App/pages/RegionPage.js","App/components/base/NoAutorizado.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","RegionUpSert","dataInicial","abrirModal","setAbrirModal","GetRegiones","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","regionId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","onChange","errorMessage","placeholder","autoComplete","type","descripcion","style","textTransform","minLength","estadoId","onClick","RegionListar","state","useSelector","accesos","setAccesos","listRegiones","setListRegiones","initData","setdataInicial","find","acceso","accesoId","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","NoAutorizado","PaisPage","Heading"],"mappings":"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","file":"static/js/26.f519a6d4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const RegionUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetRegiones }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('region', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"La regiÃ³n fue registrada exitosamente\");\r\n            GetRegiones();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('region', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetRegiones();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.regionId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la informaciÃ³n solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.regionId > 0 ? 'Actualizar InformaciÃ³n de la RegiÃ³n' : 'Registrar Nueva RegiÃ³n'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    {\r\n                                        dataInicial.regionId <= 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"regionId\">CÃ³digo</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"regionId\"\r\n                                                id=\"regionId\"\r\n                                                required\r\n                                                value={values.regionId}\r\n                                                onChange={handleOnChange}\r\n                                                errorMessage={errorMessage}\r\n                                                placeholder=\"CÃ³digo\"\r\n                                                autoComplete=\"off\"\r\n                                                type=\"numer\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nombre\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            autoComplete=\"off\"\r\n                                            minLength=\"5\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.regionId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.regionId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux'; \r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { RegionUpSert } from './RegionUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 8;\r\nexport const RegionListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [listRegiones, setListRegiones] = useState([]);\r\n    const initData = {\r\n        regionId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n\r\n    const GetRegiones = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`region?estadoId=1;2`);\r\n            if (response) {\r\n                setListRegiones(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { regionId, descripcion, estadoId } = listRegiones.find(item => item.regionId === id);\r\n        setdataInicial({\r\n            regionId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`region/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    GetRegiones();\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminÃ³ ningÃºn elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetRegiones();\r\n    }, [accesos]);\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Regiones de Guatemala</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar RegiÃ³n</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"table_dentificaciones_persona\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>CÃ³digo</th>\r\n                                                            <th>Nombre</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            listRegiones.map(({ regionId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={regionId}>\r\n                                                                    <td>{regionId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(regionId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(regionId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <RegionUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetRegiones={GetRegiones} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { RegionListar } from '../components/base/RegionListar';\r\nconst PaisPage = () => {\r\n    return (\r\n        <RegionListar/>\r\n    )\r\n}\r\n\r\nexport default PaisPage\r\n\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">InformaciÃ³n!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignaciÃ³n de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}