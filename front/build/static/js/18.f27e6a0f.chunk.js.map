{"version":3,"sources":["App/components/base/QuejaList.js","App/components/Gallery.js","App/pages/QuejaAdminPage.js","App/components/base/NoAutorizado.js"],"names":["QuejaList","stateRedux","useSelector","useState","accesos","setAccesos","listQuejasDepto","setListQuejasDepto","listQuejas","setListQuejas","numPaginaActual","setNumPaginaActual","numPagMax","setNumPagMax","totalItems","setTotalItems","totalItemsTodos","setTotalItemsTodos","origenQuejas","setOrigenQuejas","infoItem","setInfoItem","listRegiones","setListRegiones","listDepartamentos","setListDepartamentos","listMunicipios","setListMunicipios","listComercios","setListComercios","listSucursales","setListSucursales","adjuntosQueja","setAdjuntosQueja","filtrosAvanzados","setFiltrosAvanzados","editQueja","setEditQueja","tipoBusqueda","btnClickAvanzado","setBtnClickAvanzado","btnClickXDepto","setBtnClickXDepto","loadingInfo","setLoadingInfo","useForm","fechaInicial","moment","Date","getFullYear","getMonth","format","fechaFinal","departamentoId","regionId","municipioId","comercioId","sucursalId","estado_quejaId","values","handleOnChange","setValues","solucion","observaciones","resultQueja","handleChangeRespues","setValuesQueja","GetQuejasPorDepto","a","find","acceso","Number","menuId","accesoId","callApi","response","GetCatalogo","parametro","parametro2","items","unshift","value","label","GetQuejas","item","method","body","JSON","stringify","count","rows","push","hanldeClickDepto","id","descripcion","useEffect","GetInfoQueja","Media","itemsImages","map","bufferBase64","Buffer","blob","data","toString","src","thumbnail","caption","mediaId","fecha_crea","useForDemo","quejaId","Usuario","gridSize","isOpen","state","setstate","deskClass","gridDefault","gridActiveClass","misAccesos","filter","GetAccesosByMenuId","i","handleOnSubmit","e","preventDefault","length","todos","reduce","prev","cur","total","UpdateQueja","String","trim","alert_exitoso","alert_warning","className","join","xl","lg","Header","Body","key","onClick","href","DEMO","BLANK_LINK","data-toggle","data-placement","title","data-original-title","index","departamento","type","name","defaultChecked","style","cursor","onSubmit","onErrorSubmit","formData","errorInputs","Row","Group","as","Col","md","Label","htmlFor","classNamePrefix","defaultValue","required","placeholder","onChange","options","dataLength","next","hasMore","loader","clase","console","log","handleItemInfo","municipio","razon_social","sucursal","sm","user_name","solicitud","images","backdropClosesModal","autoComplete","minLength","readOnly","Gallery","props","itemType","texts","lightboxIsOpen","currentItem","closeLightbox","bind","gotoNext","gotoPrevious","gotoItem","handleClickItem","openLightbox","event","this","setState","gallery","singleItem","obj","css","classes","orientation","source","alt","xs","text","text_thumbail","videos","videoId","videoThumbnail","video_thumbnail","source_video","heading","subheading","renderGallery","onClickImage","onClickNext","onClickPrev","onClickThumbnail","onClose","showThumbnails","theme","React","Component","displayName","gutter","StyleSheet","create","marginRight","overflow","boxSizing","display","float","lineHeight","paddingRight","paddingBottom","width","height","padding","margin","border","color","landscape","square","maxWidth","QuejaPage","NoAutorizado","variant","Heading"],"mappings":"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","file":"static/js/18.f27e6a0f.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Row, Col, Card, Dropdown, Form } from 'react-bootstrap';\r\nimport Aux from \"./../../../hoc/_Aux\";\r\nimport DEMO from \"../../../store/constant\";\r\nimport Select from 'react-select';\r\nimport Gallery from \"../../../App/components/Gallery\";\r\nimport { useState } from 'react';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loading from './Loading';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport moment from 'moment';\r\nimport { ValidationForm, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport { alert_warning, alert_exitoso } from '../../../helpers/Notificacion';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nconst menuId = 36;\r\n\r\nexport const QuejaList = () => {\r\n\r\n    const stateRedux = useSelector(stateRedux => stateRedux);\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [listQuejasDepto, setListQuejasDepto] = useState([]);\r\n    const [listQuejas, setListQuejas] = useState([]);\r\n    const [numPaginaActual, setNumPaginaActual] = useState(0);\r\n    const [numPagMax, setNumPagMax] = useState(0);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [totalItemsTodos, setTotalItemsTodos] = useState(0);\r\n    const [origenQuejas, setOrigenQuejas] = useState('Todos los departamentos');\r\n    const [infoItem, setInfoItem] = useState({});\r\n\r\n    const [listRegiones, setListRegiones] = useState([]);\r\n    const [listDepartamentos, setListDepartamentos] = useState([]);\r\n    const [listMunicipios, setListMunicipios] = useState([]);\r\n    const [listComercios, setListComercios] = useState([]);\r\n    const [listSucursales, setListSucursales] = useState([]);\r\n    const [adjuntosQueja, setAdjuntosQueja] = useState([]);\r\n\r\n    const [filtrosAvanzados, setFiltrosAvanzados] = useState(false);\r\n    const [editQueja, setEditQueja] = useState(false);\r\n    const [tipoBusqueda, setTipoBusqueda] = useState(0);\r\n    const [btnClickAvanzado, setBtnClickAvanzado] = useState(0);\r\n    const [btnClickXDepto, setBtnClickXDepto] = useState(0);\r\n\r\n    const [loadingInfo, setLoadingInfo] = useState(false);\r\n\r\n\r\n    const [values, handleOnChange, , setValues] = useForm({\r\n        tipoBusqueda,\r\n        fechaInicial: moment(new Date(new Date().getFullYear(), new Date().getMonth(), 1)).format('YYYY-MM-DD'),\r\n        fechaFinal: moment(new Date()).format('YYYY-MM-DD'),\r\n        departamentoId: 0,\r\n        regionId: 0,\r\n        municipioId: 0,\r\n        comercioId: 0,\r\n        sucursalId: 0,\r\n        estado_quejaId: 0\r\n    });\r\n\r\n    const [resultQueja, handleChangeRespues, , setValuesQueja] = useForm({\r\n        solucion: '',\r\n        observaciones: ''\r\n    });\r\n\r\n    const GetQuejasPorDepto = async () => {\r\n        if (accesos.find(acceso => Number(acceso.menuId) === menuId && acceso.accesoId === 3)) {\r\n            let response = await callApi('quejaadmin/quejasdepto');\r\n            if (response) {\r\n                setListQuejasDepto(response);\r\n            }\r\n        }\r\n    }\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (stateRedux?.accesos) {\r\n            const { accesos } = stateRedux;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n    }\r\n\r\n\r\n    const GetCatalogo = async (parametro, parametro2 = 0) => {\r\n        if (accesos.find(acceso => Number(acceso.menuId) === menuId && acceso.accesoId === 3)) {\r\n            let response = {};\r\n            let items = [];\r\n            switch (parametro) {\r\n                case 'misregiones':\r\n                    response = await callApi(`quejaadmin/${parametro}`);\r\n                    if (response) {\r\n                        items = response || [];\r\n                        items.unshift({ value: 0, label: 'TODAS LAS REGIONES' });\r\n                        setListRegiones(items);\r\n                    }\r\n                    break;\r\n                case 'misdeptos':\r\n                    response = await callApi(`quejaadmin/${parametro}?regionId=${parametro2}`);\r\n                    if (response) {\r\n                        items = response || [];\r\n                        items.unshift({ value: 0, label: 'TODOS LOS DEPARTAMENTOS' });\r\n                        setListDepartamentos(items);\r\n                    }\r\n                    break;\r\n                case 'municipios':\r\n                    response = await callApi(`quejaadmin/${parametro}?departamentoId=${parametro2}`);\r\n                    if (response) {\r\n                        items = response || [];\r\n                        items.unshift({ value: 0, label: 'TODOS LOS MUNICIPIOS' });\r\n                        setListMunicipios(items);\r\n                    }\r\n                    break;\r\n                case 'comers':\r\n                    response = await callApi(`quejaadmin/${parametro}?departamentoId=${values.departamentoId}&municipioId=${values.municipioId}`);\r\n                    if (response) {\r\n                        items = response || [];\r\n                        items.unshift({ value: 0, label: 'TODOS LOS COMERCIOS' });\r\n                        setListComercios(items);\r\n                    }\r\n                    break;\r\n                case 'sucurs':\r\n                    response = await callApi(`quejaadmin/${parametro}?comercioId=${values.comercioId}&municipioId=${values.municipioId}`);\r\n                    if (response) {\r\n                        items = response || [];\r\n                        items.unshift({ value: 0, label: 'TODAS LAS SUCURSALES' });\r\n                        setListSucursales(items);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const GetQuejas = async () => {\r\n        if (accesos.find(item => Number(item.menuId) === menuId && item.accesoId === 3)) {\r\n            if (Number(tipoBusqueda) === 0) {\r\n                let response = await callApi(`quejaadmin/list?tipoBusqueda=0&pagina=${numPaginaActual}`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(values)\r\n                });\r\n                if (response) {\r\n                    let { count, rows } = response;\r\n                    setNumPagMax(count / 10);\r\n                    let items = listQuejas || [];\r\n                    items.push(...rows);\r\n                    setListQuejas(items);\r\n                    setTotalItems(count);\r\n                    setNumPaginaActual(numPaginaActual + 1);\r\n                }\r\n            } else if (Number(tipoBusqueda) === 1) {\r\n                let response = await callApi(`quejaadmin/list?tipoBusqueda=0&pagina=${numPaginaActual}`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(values)\r\n                });\r\n                if (response) {\r\n                    let { count, rows = [] } = response;\r\n                    setNumPagMax(count / 10);\r\n                    let items = listQuejas || [];\r\n                    items.push(...rows);\r\n                    setListQuejas(items);\r\n                    setTotalItems(count);\r\n                    setNumPaginaActual(numPaginaActual + 1);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n    const hanldeClickDepto = (id, descripcion) => {\r\n        setFiltrosAvanzados(false);\r\n        setListQuejas([]);\r\n        setNumPaginaActual(0);\r\n        setValues({ ...values, tipoBusqueda: 0, departamentoId: id });\r\n        setOrigenQuejas(descripcion);\r\n        let actual = btnClickXDepto;\r\n        let nuevo = actual + 1;\r\n        setBtnClickXDepto(nuevo);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetQuejasPorDepto();\r\n        GetQuejas();\r\n    }, [accesos, btnClickXDepto])\r\n\r\n\r\n    const GetInfoQueja = async (id) => {\r\n        setLoadingInfo(true);\r\n        let response = await callApi(`quejaadmin/info/${id}`)\r\n        if (response) {\r\n            if (response?.Media) {\r\n                let itemsImages = response.Media.map(item => {\r\n                    let bufferBase64 = new Buffer(item.blob.data, \"binary\").toString(\"base64\");\r\n                    return {\r\n                        src: \"data:image/jpeg;base64,\" + bufferBase64,\r\n                        thumbnail: \"data:image/jpeg;base64,\" + bufferBase64,\r\n                        caption: `Adjunto ${item.mediaId} ${item.fecha_crea}`,\r\n                        useForDemo: true\r\n                    }\r\n                });\r\n                setAdjuntosQueja(itemsImages);\r\n            }\r\n\r\n            setValuesQueja({ ...resultQueja, quejaId: response.quejaId, solucion: response.solucion, observaciones: response.observaciones, estado_quejaId: response.estado_quejaId, Usuario: response.Usuario });\r\n        }\r\n        setLoadingInfo(false);\r\n    }\r\n    const handleItemInfo = (item) => {\r\n        GetInfoQueja(item.quejaId);\r\n        setInfoItem(item);\r\n        setstate({ isOpen: true });\r\n        console.log(accesos);\r\n    }\r\n\r\n    const [state, setstate] = useState({\r\n        gridSize: 'large-view',\r\n        isOpen: false\r\n    });\r\n\r\n    const deskClass = ['btn-page', 'help-desk', state.gridSize];\r\n    const gridDefault = 'btn waves-effect waves-light btn-primary';\r\n    const gridActiveClass = 'btn waves-effect waves-light btn-primary active';\r\n\r\n    const queView = 'q-view';\r\n    const queViewActive = 'q-view active';\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('misregiones');\r\n    }, [accesos]);\r\n\r\n    useEffect(() => {\r\n        if (accesos.find(i => Number(i.menuId) === Number(menuId) && Number(i.accesoId) === 2)) {\r\n            setEditQueja(true);\r\n        } else {\r\n            setEditQueja(false);\r\n        }\r\n    }, [accesos]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('misdeptos', values.regionId);\r\n    }, [values.regionId]);\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('municipios', values.departamentoId);\r\n    }, [values.departamentoId]);\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('comers', values.departamentoId);\r\n    }, [values.departamentoId]);\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('comers', values.departamentoId);\r\n    }, [values.municipioId]);\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('sucurs', values.municipioId);\r\n    }, [values.municipioId]);\r\n\r\n\r\n    useEffect(() => {\r\n        GetCatalogo('sucurs', values.comercioId);\r\n    }, [values.comercioId]);\r\n\r\n    useEffect(() => {\r\n        GetQuejas();\r\n    }, [accesos]);\r\n\r\n    useEffect(() => {\r\n        if (filtrosAvanzados === true) {\r\n            setValues({ ...values, departamentoId: 0, tipoBusqueda: 1 });\r\n        } else {\r\n            setValues({ ...values, tipoBusqueda: 0 });\r\n        }\r\n    }, [filtrosAvanzados])\r\n\r\n    const handleRegionId = ({ value }) => {\r\n        setValues({ ...values, regionId: value });\r\n    }\r\n\r\n    const handleDepartamentoId = ({ value }) => {\r\n        setValues({ ...values, departamentoId: value });\r\n    }\r\n\r\n    const handleMunicipioId = ({ value }) => {\r\n        setValues({ ...values, municipioId: value });\r\n    }\r\n\r\n    const handleComercioId = ({ value }) => {\r\n        setValues({ ...values, comercioId: value });\r\n    }\r\n\r\n    const handleSucursalId = ({ value }) => {\r\n        setValues({ ...values, sucursalId: value });\r\n    }\r\n\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setListQuejas([]);\r\n        setNumPaginaActual(0);\r\n        setOrigenQuejas(\"FILTRO AVANZADO\");\r\n        let actual = btnClickAvanzado;\r\n        let nuevo = actual + 1;\r\n        setBtnClickAvanzado(nuevo)\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetQuejas();\r\n    }, [btnClickAvanzado])\r\n\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete la información solicitada\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (listQuejasDepto.length > 0) {\r\n            let todos = listQuejasDepto.reduce((prev, cur) => Number(prev) + (Number(cur.total)), 0);\r\n            setTotalItemsTodos(todos);\r\n        }\r\n    }, [listQuejasDepto])\r\n\r\n    const UpdateQueja = async () => {\r\n        if (String(resultQueja.solucion).trim().length > 10) {\r\n            setLoadingInfo(true);\r\n            let response = await callApi(`quejaadmin`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(resultQueja)\r\n            });\r\n            if (response) {\r\n                alert_exitoso(\"Se actualizó la queja exitosamente\");\r\n                setstate({ isOpen: false });\r\n            }\r\n            setLoadingInfo(false);\r\n        } else {\r\n            alert_warning(\"Se debe de agregar una descripción de la solución\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            {\r\n                accesos.find(item => Number(item.menuId) === menuId && item.accesoId === 3) ?\r\n                    <>\r\n                        <Row className={deskClass.join(' ')}>\r\n                            <Col xl={2} lg={12}>\r\n                                <div className=\"right-side\">\r\n                                    <Card>\r\n                                        <Card.Header className=\"pt-4 pb-4\">\r\n                                            <h5>Quejas por departamento</h5>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"p-3\">\r\n                                            <div className=\"cat-list\">\r\n                                                <div className=\"border-bottom pb-3 \" key={`depto_id${0}`} onClick={() => { hanldeClickDepto(0, \"Todos los departamento\") }}>\r\n                                                    <div className=\"d-inline-block\">\r\n                                                        <a href={DEMO.BLANK_LINK}><i className=\"feather icon-edit\" />TODOS</a>\r\n                                                    </div>\r\n                                                    <div className=\"float-right span-content\">\r\n                                                        <a href={DEMO.BLANK_LINK} className=\"btn waves-effect waves-light btn-default badge-info rounded-circle mr-1\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Mostrar listado de quejas\" data-original-title=\"tooltip on top\">{totalItemsTodos}</a>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {\r\n                                                    listQuejasDepto.map(({ departamentoId, departamento, total }, index) => {\r\n                                                        return (\r\n                                                            <div className=\"border-bottom pb-3 \" key={`depto_id${departamentoId}`} onClick={() => { hanldeClickDepto(departamentoId, departamento) }}>\r\n                                                                <div className=\"d-inline-block\">\r\n                                                                    <a href={DEMO.BLANK_LINK}><i className=\"feather icon-edit\" /> {departamento}</a>\r\n                                                                </div>\r\n                                                                <div className=\"float-right span-content\">\r\n                                                                    <a href={DEMO.BLANK_LINK} className=\"btn waves-effect waves-light btn-default badge-info rounded-circle mr-1\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Mostrar listado de quejas de este departamento\" data-original-title=\"tooltip on top\">{total}</a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n\r\n                                                }\r\n                                            </div>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xl={10} lg={12}>\r\n                                <Card>\r\n                                    <Card.Body>\r\n\r\n                                        <nav className=\"navbar justify-content-between p-0 align-items-center\">\r\n                                            <h5>Listado de Quejas registradas en el sistema</h5>\r\n                                            <div className=\"btn-group btn-group-toggle\">\r\n                                                <label onClick={() => setstate({ gridSize: 'sm-view' })} className={state.gridSize === 'sm-view' ? gridActiveClass : gridDefault}>\r\n                                                    <input type=\"radio\" name=\"options\" id=\"option1\" defaultChecked={true} /> <i className=\"feather icon-align-justify m-0\" />\r\n                                                </label>\r\n                                                <label onClick={() => setstate({ gridSize: 'md-view' })} className={state.gridSize === 'md-view' ? gridActiveClass : gridDefault}>\r\n                                                    <input type=\"radio\" name=\"options\" id=\"option1\" defaultChecked={true} /> <i className=\"feather icon-menu m-0\" />\r\n                                                </label>\r\n                                                <label onClick={() => setstate({ gridSize: 'large-view' })} className={state.gridSize === 'large-view' ? gridActiveClass : gridDefault}>\r\n                                                    <input type=\"radio\" name=\"options\" id=\"option1\" defaultChecked={true} /> <i className=\"feather icon-grid m-0\" />\r\n                                                </label>\r\n                                            </div>\r\n                                        </nav>\r\n                                        <hr />\r\n                                        <div className=\"text-center\">\r\n                                            <span className=\"b-b-primary text-primary\" style={{ cursor: 'pointer' }} onClick={() => { setFiltrosAvanzados(!filtrosAvanzados) }}>Filtros avanzados</span>\r\n                                        </div>\r\n                                        {filtrosAvanzados === true &&\r\n                                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} md=\"4\">\r\n                                                        <Form.Label htmlFor=\"regionId\">Region</Form.Label>\r\n                                                        <Select\r\n                                                            id=\"regionId\"\r\n                                                            name=\"regionId\"\r\n                                                            className=\"basic-single\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            defaultValue={listRegiones.find(i => i.value === values.regionId)}\r\n                                                            required\r\n                                                            placeholder=\"Region\"\r\n                                                            onChange={handleRegionId}\r\n                                                            options={listRegiones}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md=\"4\">\r\n                                                        <Form.Label htmlFor=\"departamentoId\">Departamento</Form.Label>\r\n                                                        <Select\r\n                                                            id=\"departamentoId\"\r\n                                                            name=\"departamentoId\"\r\n                                                            className=\"basic-single\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            defaultValue={listDepartamentos.find(i => i.value === values.departamentoId)}\r\n                                                            required\r\n                                                            placeholder=\"Departamento\"\r\n                                                            onChange={handleDepartamentoId}\r\n                                                            options={listDepartamentos}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md=\"4\">\r\n                                                        <Form.Label htmlFor=\"municipioId\">Municipio</Form.Label>\r\n                                                        <Select\r\n                                                            id=\"municipioId\"\r\n                                                            name=\"municipioId\"\r\n                                                            className=\"basic-single\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            defaultValue={listMunicipios.find(i => i.value === values.municipioId)}\r\n                                                            required\r\n                                                            placeholder=\"Departamento\"\r\n                                                            onChange={handleMunicipioId}\r\n                                                            options={listMunicipios}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} md=\"6\">\r\n                                                        <Form.Label htmlFor=\"comercioId\">Comercio</Form.Label>\r\n                                                        <Select\r\n                                                            id=\"comercioId\"\r\n                                                            name=\"comercioId\"\r\n                                                            className=\"basic-single\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            defaultValue={listComercios.find(i => i.value === values.comercioId)}\r\n                                                            required\r\n                                                            placeholder=\"Comercio\"\r\n                                                            onChange={handleComercioId}\r\n                                                            options={listComercios}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md=\"6\">\r\n                                                        <Form.Label htmlFor=\"sucursalId\">Sucursal</Form.Label>\r\n                                                        <Select\r\n                                                            id=\"sucursalId\"\r\n                                                            name=\"sucursalId\"\r\n                                                            className=\"basic-single\"\r\n                                                            classNamePrefix=\"select\"\r\n                                                            defaultValue={listSucursales.find(i => i.value === values.sucursalId)}\r\n                                                            required\r\n                                                            placeholder=\"Sucursal\"\r\n                                                            onChange={handleSucursalId}\r\n                                                            options={listSucursales}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n                                                <div className=\"row\">\r\n                                                    <Form.Group as={Col} md=\"3\">\r\n                                                        <Form.Label htmlFor=\"estado_quejaId\">Estado de Queja</Form.Label>\r\n                                                        <SelectGroup\r\n                                                            name=\"estado_quejaId\"\r\n                                                            id=\"estado_quejaId\"\r\n                                                            required\r\n                                                            onChange={handleOnChange}\r\n                                                            value={values.estado_quejaId}\r\n                                                        >\r\n                                                            <option value=\"0\">TODOS LOS ESTADOS</option>\r\n                                                            <option value=\"1\">ENVIADA</option>\r\n                                                            <option value=\"5\">FINALIZADA</option>\r\n                                                        </SelectGroup>\r\n                                                    </Form.Group>\r\n\r\n                                                    <div className=\"col-md-3\">\r\n                                                        <div className=\"form-group col\">\r\n                                                            <label className=\"form-label\">Fecha Inicial</label>\r\n                                                            <input\r\n                                                                type=\"date\"\r\n                                                                id=\"fechaInicial\"\r\n                                                                name=\"fechaInicial\"\r\n                                                                value={values.fechaInicial}\r\n                                                                onChange={handleOnChange}\r\n                                                                className=\"form-control\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-3\">\r\n                                                        <div className=\"form-group col\">\r\n                                                            <label className=\"form-label\">Fecha Final</label>\r\n                                                            <input\r\n                                                                type=\"date\"\r\n                                                                id=\"fechaFinal\"\r\n                                                                name=\"fechaFinal\"\r\n                                                                value={values.fechaFinal}\r\n                                                                onChange={handleOnChange}\r\n                                                                className=\"form-control\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-3\">\r\n                                                        <div className=\"form-group col\">\r\n                                                            <label className=\"form-label\">&nbsp;&nbsp;</label>\r\n                                                            <div className=\"mb-3 input-group\">\r\n                                                                <div className=\"input-group-append\">\r\n                                                                    <button className=\"btn btn-primary\" type=\"submit\">Filtrar<i className=\"feather icon-search\" /></button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </ValidationForm>\r\n                                        }\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                {\r\n                                    listQuejas.length > 0 ?\r\n                                        <>\r\n                                            <h4>{origenQuejas} ({totalItems})</h4>\r\n                                            <hr />\r\n                                        </>\r\n                                        : <>\r\n                                            <h4>{origenQuejas} (0)</h4>\r\n                                            <hr />\r\n                                        </>\r\n                                }\r\n                                <InfiniteScroll\r\n                                    dataLength={listQuejas.length}\r\n                                    next={GetQuejas}\r\n                                    hasMore={true}\r\n                                    loader={numPaginaActual <= numPagMax && <Loading />}\r\n                                >\r\n                                    {\r\n\r\n                                        listQuejas.map((item, index) => {\r\n                                            let clase = \"open-tic\";\r\n                                            if (item.estado_quejaId === 5) {\r\n                                                clase = \"close-tic\";\r\n                                            }\r\n                                            return (\r\n                                                <div className={`ticket-block ${clase}`} key={`itemqueja__${index}`}>\r\n                                                    <Row className=\"row\">\r\n                                                        <div className=\"col\">\r\n                                                            <div className=\"card hd-body\" onClick={() => handleItemInfo(item)}>\r\n                                                                <div className=\"row align-items-center\">\r\n                                                                    <div className=\"col border-right pr-0\">\r\n                                                                        <div className=\"card-body inner-center\">\r\n                                                                            <div className=\"ticket-customer font-weight-bold\">[{item.quejaId}] - Anónimo {\r\n                                                                                item.estado_quejaId === 5 && <strong> - (PROCESO FINALIZADO)</strong>\r\n                                                                            }</div>\r\n                                                                            <ul className=\"list-inline mt-2 mb-0\">\r\n                                                                                <li>Departamento {item.departamento} - Municipio {item.municipio}</li>\r\n                                                                                <li className=\"list-inline-item\"><i className=\"feather icon-home mr-1 f-14\" />{item.razon_social} ({item.sucursal})</li>\r\n                                                                                <li className=\"list-inline-item\"><i className=\"feather icon-calendar mr-1 f-14\" />Ingreso: {item.fecha_crea}</li>\r\n                                                                            </ul>\r\n                                                                            <div className=\"excerpt mt-4\">\r\n                                                                                <h6>Queja</h6>\r\n                                                                                <p>{item.descripcion}</p>\r\n                                                                            </div>\r\n                                                                            <div className=\"mt-2\">\r\n                                                                                <div className=\"mr-3 text-muted\" style={{ cursor: 'pointer' }}><i className=\"feather icon-eye mr-1\" />Ver Detalles</div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-auto pl-0 right-icon\">\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <ul className=\"list-unstyled mb-0\">\r\n                                                                                <li style={{ cursor: 'pointer' }}><div data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"tooltip on top\"><i className=\"feather icon-circle text-muted\" /></div></li>\r\n                                                                            </ul>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n\r\n                                    }\r\n                                </InfiniteScroll>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <div className={state.isOpen ? queViewActive : queView}>\r\n                            <div className=\"overlay\" onClick={() => setstate({ isOpen: false })} />\r\n                            <div className=\"content\">\r\n                                {\r\n                                    loadingInfo === true ? <Loading />\r\n                                        : <Col sm={12}>\r\n                                            <Card className='border-0 shadow-none'>\r\n                                                <Card.Body className='pr-0 pl-0 pt-0'>\r\n                                                    <Row>\r\n                                                        <Col>\r\n                                                            <div className=\"tab-block border-bottom mb-4 pb-3\">\r\n                                                                <h5><i className=\"feather icon-corner-up-left mr-1\" />Responder queja</h5>\r\n                                                            </div>\r\n                                                            <Col>\r\n                                                                <h6 className=\"mb-0\">[{infoItem.quejaId}] - Anónimo\r\n                                                                    {\r\n                                                                        resultQueja.estado_quejaId === 5 &&\r\n                                                                        <strong> - (PROCESO FINALIZADO POR [{resultQueja?.Usuario?.user_name}])</strong>\r\n                                                                    }\r\n                                                                </h6>\r\n                                                                <hr />\r\n                                                                <h6 className=\"mb-1\">Departamento: {infoItem.departamento} - {infoItem.razon_social}</h6>\r\n                                                                <h6 className=\"mb-1\">Municipio:{infoItem.municipio} - {infoItem.sucursal}</h6>\r\n                                                                <label className=\"text-muted\">Ingreso:{infoItem.fecha_crea}</label>\r\n                                                            </Col>\r\n                                                            <Col sm={12} className='mt-3'>\r\n                                                                {\r\n                                                                    adjuntosQueja.length > 0 ?\r\n                                                                        <div className=\"comment-content\">\r\n                                                                            <h6 className=\"mb-1\">Queja: {infoItem.descripcion}</h6>\r\n                                                                            <hr />\r\n                                                                            <h6 className=\"mb-5\">Solicita: {infoItem.solicitud}</h6>\r\n                                                                            <p><strong>Imagenes adjuntas</strong></p>\r\n                                                                            <hr />\r\n                                                                            <Gallery images={adjuntosQueja || []} backdropClosesModal />\r\n                                                                        </div>\r\n                                                                        : <div className=\"comment-content\">\r\n                                                                            <h6 className=\"mb-1\">Queja: {infoItem.descripcion}</h6>\r\n                                                                        </div>\r\n                                                                }\r\n                                                            </Col>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Body>\r\n\r\n                                                <Row className=\"border-bottom border-top pb-3 pt-4 pl-3 pr-3\">\r\n\r\n                                                    <div className=\"form-group col-md-12\">\r\n                                                        <label className=\"form-label\" htmlFor=\"solucion\">Solucion a queja</label>\r\n                                                        <textarea\r\n                                                            className=\"form-control\"\r\n                                                            name=\"solucion\"\r\n                                                            id=\"solucion\"\r\n                                                            placeholder=\"Se debe de describir la solución a dicha queja\"\r\n                                                            autoComplete=\"off\"\r\n                                                            rows=\"6\"\r\n                                                            minLength=\"50\"\r\n                                                            value={resultQueja.solucion ?? \"\"}\r\n                                                            onChange={handleChangeRespues}\r\n                                                            readOnly={(resultQueja.estado_quejaId === 5 || !editQueja) && true}\r\n                                                        >\r\n                                                        </textarea>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group col-md-12\">\r\n                                                        <label className=\"form-label\" htmlFor=\"observaciones\">Observaciones</label>\r\n                                                        <textarea\r\n                                                            className=\"form-control\"\r\n                                                            name=\"observaciones\"\r\n                                                            id=\"observaciones\"\r\n                                                            placeholder=\"Observaciones\"\r\n                                                            autoComplete=\"off\"\r\n                                                            rows=\"3\"\r\n                                                            value={resultQueja.observaciones ?? \"\"}\r\n                                                            onChange={handleChangeRespues}\r\n                                                            readOnly={(resultQueja.estado_quejaId === 5 || !editQueja) && true}\r\n                                                        >\r\n                                                        </textarea>\r\n                                                    </div>\r\n\r\n                                                    <button type=\"button\" className=\"btn btn-warning mr-1\" onClick={() => setstate({ isOpen: false })} > Cancelar</button>\r\n                                                    {\r\n                                                        resultQueja.estado_quejaId !== 5 && editQueja === true &&\r\n                                                        <button type=\"button\" className=\"btn btn-success\" onClick={() => { UpdateQueja(); }}>Responder</button>\r\n                                                    }\r\n                                                </Row>\r\n                                            </Card>\r\n                                        </Col>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    : <NoAutorizado />\r\n            }\r\n        </Aux>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { css, StyleSheet } from 'aphrodite/no-important';\r\nimport Lightbox from 'react-images-texts-videos';\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass Gallery extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        let itemType;\r\n\r\n        if (this.props.images) {\r\n            itemType = 'images'\r\n        } else if (this.props.texts) {\r\n            itemType = 'texts'\r\n        } else {\r\n            itemType = 'videos'\r\n        }\r\n\r\n        this.state = {\r\n            lightboxIsOpen: false,\r\n            currentItem: 0,\r\n            itemType: itemType,\r\n        };\r\n\r\n        this.closeLightbox = this.closeLightbox.bind(this);\r\n        this.gotoNext = this.gotoNext.bind(this);\r\n        this.gotoPrevious = this.gotoPrevious.bind(this);\r\n        this.gotoItem = this.gotoItem.bind(this);\r\n        this.handleClickItem = this.handleClickItem.bind(this);\r\n        this.openLightbox = this.openLightbox.bind(this);\r\n    }\r\n\r\n    openLightbox (event, index) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            currentItem: index,\r\n            lightboxIsOpen: true,\r\n        });\r\n    }\r\n\r\n    closeLightbox () {\r\n        this.setState({\r\n            currentItem: 0,\r\n            lightboxIsOpen: false,\r\n        });\r\n    }\r\n\r\n    gotoPrevious () {\r\n        this.setState({\r\n            currentItem: this.state.currentItem - 1,\r\n        });\r\n    }\r\n\r\n    gotoNext () {\r\n        this.setState({\r\n            currentItem: this.state.currentItem + 1,\r\n        });\r\n    }\r\n\r\n    gotoItem (index) {\r\n        this.setState({\r\n            currentItem: index,\r\n        });\r\n    }\r\n\r\n    handleClickItem () {\r\n        if (this.state.currentItem === this.props[this.state.itemType].length - 1) return;\r\n\r\n        this.gotoNext();\r\n    }\r\n\r\n    renderGallery () {\r\n        if (this.state.itemType === 'images') {\r\n            const { images } = this.props;\r\n\r\n            if (!images) return;\r\n\r\n            let gallery;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <a\r\n                            href={obj.src}\r\n                            className={css(classes.thumbnail, classes[obj.orientation])}\r\n                            onClick={(e) => this.openLightbox(e, i)}\r\n                            key={i}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <a\r\n                                href={obj.src}\r\n                                className={css(classes.thumbnail, classes[obj.orientation])}\r\n                                onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        } else if (this.state.itemType === 'texts') {\r\n            const { texts } = this.props;\r\n            let gallery;\r\n            if (!texts) return;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <p className={css(classes.text_thumbail)} key={i} onClick={(e) => this.openLightbox(e, i)}>\r\n                            {text}\r\n                        </p>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <p\r\n                                className={css(classes.text_thumbail)}\r\n                                onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                {text}\r\n                            </p>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            let gallery;\r\n            const { videos } = this.props;\r\n\r\n            if (!videos) return;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <a href={DEMO.BLANK_LINK}\r\n                           className={css(classes.video_thumbnail)}\r\n                           key={i}\r\n                           onClick={(e) => this.openLightbox(e, i)}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <a href={DEMO.BLANK_LINK}\r\n                               className={css(classes.video_thumbnail)}\r\n                               onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div className='section'>\r\n                {this.props.heading && <h2>{this.props.heading}</h2>}\r\n                {this.props.subheading && <p>{this.props.subheading}</p>}\r\n                {this.renderGallery()}\r\n                <Lightbox\r\n                    currentItem={this.state.currentItem}\r\n                    items={{type:this.state.itemType,items:this.props[this.state.itemType]}}\r\n                    isOpen={this.state.lightboxIsOpen}\r\n                    onClickImage={() => this.handleClickItem}\r\n                    onClickNext={this.gotoNext}\r\n                    onClickPrev={this.gotoPrevious}\r\n                    onClickThumbnail={() => this.gotoItem}\r\n                    onClose={this.closeLightbox}\r\n                    showThumbnails={this.props.showThumbnails}\r\n                    theme={this.props.theme}\r\n                    backdropClosesModal={this.props.backdropClosesModal}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGallery.displayName = 'Gallery';\r\n\r\nconst gutter = {\r\n    small: 2,\r\n    large: 4,\r\n};\r\nconst classes = StyleSheet.create({\r\n    gallery: {\r\n        marginRight: -gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            marginRight: -gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    thumbnail: {\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    video_thumbnail: {\r\n        width:'50%',\r\n        height: '258px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    text_thumbail: {\r\n        cursor: 'pointer',\r\n        height: '200px',\r\n        'text-align': 'justify',\r\n        'font-size': '16px',\r\n        width: '46%',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        overflow: 'scroll',\r\n        border: 'solid 1px #E6E6E8',\r\n        'border-radius': '4px',\r\n        color: 'darkgray',\r\n\r\n        '@media (min-width: 500px)': {\r\n        },\r\n    },\r\n\r\n    // orientation\r\n    landscape: {\r\n        width: '30%',\r\n    },\r\n    square: {\r\n        paddingBottom: 0,\r\n        width: '40%',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingBottom: 0,\r\n        },\r\n    },\r\n\r\n    // actual <img />\r\n    source: {\r\n        border: 0,\r\n        display: 'block',\r\n        height: 'auto',\r\n        maxWidth: '100%',\r\n        width: 'auto',\r\n    },\r\n\r\n\r\n    source_video: {\r\n        border: 0,\r\n        height: 'auto',\r\n        maxWidth: '90%',\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default Gallery;","import React from 'react'\r\nimport { QuejaList } from '../components/base/QuejaList'\r\nconst QuejaPage = () => {\r\n    return (\r\n        <QuejaList />\r\n    )\r\n}\r\n\r\nexport default QuejaPage\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}