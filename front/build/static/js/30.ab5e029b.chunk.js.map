{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","App/components/base/TipoDocumentoUpSert.js","App/components/base/TipoDocumentoListar.js","App/pages/TipoDocumentoPage.js","App/components/base/NoAutorizado.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","TipoDocumentoUpSert","dataInicial","abrirModal","setAbrirModal","GetTiposIdentificaciones","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","tipo_documentoId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","descripcion","onChange","errorMessage","placeholder","autoComplete","style","textTransform","type","estadoId","onClick","TipoDocumentoListar","state","useSelector","accesos","setAccesos","catTipoDocumento","setCatTipoDocumento","initData","setdataInicial","find","acceso","accesoId","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","TipoDocumentoPage","Heading"],"mappings":"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","file":"static/js/30.ab5e029b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const TipoDocumentoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetTiposIdentificaciones }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('tipodocumento', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Tipo de documento de identificaciÃ³n registrado exitosamente\");\r\n            GetTiposIdentificaciones();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('tipodocumento', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetTiposIdentificaciones();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.tipo_documentoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la informaciÃ³n solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.tipo_documentoId > 0 ? 'Actualizar Tipo Documento' : 'Nuevo Tipo de Documento'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">DescripciÃ³n</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"DescripciÃ³n\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.tipo_documentoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.tipo_documentoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { TipoDocumentoUpSert } from './TipoDocumentoUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 5;\r\nexport const TipoDocumentoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catTipoDocumento, setCatTipoDocumento] = useState([]);\r\n    const initData = {\r\n        tipo_documentoId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetTiposIdentificaciones = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('tipodocumento?estadoId=1;2');\r\n            if (response) {\r\n                setCatTipoDocumento(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { tipo_documentoId, descripcion, estadoId } = catTipoDocumento.find(item => item.tipo_documentoId === id);\r\n        setdataInicial({\r\n            tipo_documentoId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`tipodocumento/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = catTipoDocumento.filter(item => item.tipo_documentoId !== id);\r\n                    setCatTipoDocumento(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminÃ³ ningÃºn elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetTiposIdentificaciones();\r\n    }, [accesos]);\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Tipos de documentos de identificaciÃ³n</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Tipo Documento</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>CÃ³digo</th>\r\n                                                            <th>DescripciÃ³n</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            catTipoDocumento.map(({ tipo_documentoId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={tipo_documentoId}>\r\n                                                                    <td>{tipo_documentoId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(tipo_documentoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(tipo_documentoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <TipoDocumentoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetTiposIdentificaciones={GetTiposIdentificaciones} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { TipoDocumentoListar } from '../components/base/TipoDocumentoListar'\r\n\r\nconst TipoDocumentoPage = () => {\r\n    return (\r\n      <TipoDocumentoListar/>\r\n    )\r\n}\r\n\r\nexport default TipoDocumentoPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">InformaciÃ³n!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignaciÃ³n de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}