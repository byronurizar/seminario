{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","App/components/base/AccesoUpSert.js","App/components/base/AccesoListar.js","App/pages/AccesoPage.js","App/components/base/NoAutorizado.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","AccesoUpSert","dataInicial","abrirModal","setAbrirModal","GetAccesos","dispatch","useDispatch","useState","loading","setLoading","useForm","values","handleOnChange","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","UpdateUserInfo","handleOnSubmit","e","preventDefault","accesoId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","descripcion","onChange","errorMessage","placeholder","autoComplete","style","textTransform","type","estadoId","onClick","AccesoListar","state","useSelector","accesos","setAccesos","catAcceso","setCatAcceso","initData","setdataInicial","find","acceso","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","AccesoPage","Heading"],"mappings":"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","file":"static/js/19.935f5867.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport { UpdateUserInfo } from '../../../actions/auth';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const AccesoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetAccesos }) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false)\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('acceso', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Acceso registrado exitosamente\");\r\n            GetAccesos();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('acceso', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            dispatch(UpdateUserInfo());\r\n            GetAccesos();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.accesoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.accesoId > 0 ? 'Actualizar Acceso' : 'Nuevo Acceso'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripción</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripción\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.accesoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.accesoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { AccesoUpSert } from './AccesoUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport { UpdateUserInfo } from '../../../actions/auth';\r\nimport Loading from './Loading';\r\nconst menuId = 1;\r\nexport const AccesoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catAcceso, setCatAcceso] = useState([]);\r\n    const initData = {\r\n        accesoId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetAccesos = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('acceso?estadoId=1;2');\r\n            if (response) {\r\n                setCatAcceso(response);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { accesoId, descripcion, estadoId } = catAcceso.find(item => item.accesoId === id);\r\n        setdataInicial({\r\n            accesoId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`acceso/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    dispatch(UpdateUserInfo());\r\n                    let listActual = catAcceso.filter(item => item.accesoId !== id);\r\n                    setCatAcceso(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetAccesos();\r\n    }, [accesos])\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Listado de accesos</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Acceso</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Código</th>\r\n                                                            <th>Descripción</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            catAcceso.map(({ accesoId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={accesoId}>\r\n                                                                    <td>{accesoId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(accesoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(accesoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                :\r\n                                                <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <AccesoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetAccesos={GetAccesos} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { AccesoListar } from '../components/base/AccesoListar';\r\n\r\nconst AccesoPage = () => {\r\n    return (\r\n      <AccesoListar/>\r\n    )\r\n}\r\n\r\nexport default AccesoPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}