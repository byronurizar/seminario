{"version":3,"sources":["App/components/base/TipoDocumentoUpSert.js","App/components/base/TipoDocumentoListar.js","App/pages/TipoDocumentoPage.js","App/components/base/NoAutorizado.js"],"names":["TipoDocumentoUpSert","dataInicial","abrirModal","setAbrirModal","GetTiposIdentificaciones","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","tipo_documentoId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","descripcion","onChange","errorMessage","placeholder","autoComplete","style","textTransform","type","estadoId","className","onClick","TipoDocumentoListar","state","useSelector","accesos","setAccesos","catTipoDocumento","setCatTipoDocumento","initData","setdataInicial","find","acceso","accesoId","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","TipoDocumentoPage","Heading"],"mappings":"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","file":"static/js/30.4c649ec5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const TipoDocumentoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetTiposIdentificaciones }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('tipodocumento', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Tipo de documento de identificaci贸n registrado exitosamente\");\r\n            GetTiposIdentificaciones();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('tipodocumento', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetTiposIdentificaciones();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.tipo_documentoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la informaci贸n solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.tipo_documentoId > 0 ? 'Actualizar Tipo Documento' : 'Nuevo Tipo de Documento'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripci贸n</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripci贸n\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.tipo_documentoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.tipo_documentoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { TipoDocumentoUpSert } from './TipoDocumentoUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 5;\r\nexport const TipoDocumentoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catTipoDocumento, setCatTipoDocumento] = useState([]);\r\n    const initData = {\r\n        tipo_documentoId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetTiposIdentificaciones = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('tipodocumento?estadoId=1;2');\r\n            if (response) {\r\n                setCatTipoDocumento(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { tipo_documentoId, descripcion, estadoId } = catTipoDocumento.find(item => item.tipo_documentoId === id);\r\n        setdataInicial({\r\n            tipo_documentoId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`tipodocumento/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = catTipoDocumento.filter(item => item.tipo_documentoId !== id);\r\n                    setCatTipoDocumento(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se elimin贸 ning煤n elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetTiposIdentificaciones();\r\n    }, [accesos]);\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Tipos de documentos de identificaci贸n</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Tipo Documento</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>C贸digo</th>\r\n                                                            <th>Descripci贸n</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            catTipoDocumento.map(({ tipo_documentoId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={tipo_documentoId}>\r\n                                                                    <td>{tipo_documentoId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(tipo_documentoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(tipo_documentoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <TipoDocumentoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetTiposIdentificaciones={GetTiposIdentificaciones} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { TipoDocumentoListar } from '../components/base/TipoDocumentoListar'\r\n\r\nconst TipoDocumentoPage = () => {\r\n    return (\r\n      <TipoDocumentoListar/>\r\n    )\r\n}\r\n\r\nexport default TipoDocumentoPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Informaci贸n!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignaci贸n de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}