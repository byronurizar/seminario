{"version":3,"sources":["App/components/base/PersonaListar.js","App/pages/PersonaPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["PersonaListar","state","useSelector","useState","loading","setLoading","accesos","setAccesos","personas","setPersonas","GetPersonas","a","find","acceso","accesoId","limpiarEstiloTabla","callApi","response","asignarEstiloTabla","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","Row","className","Col","sm","Card","Body","Loading","Link","variant","to","Table","striped","hover","responsive","bordered","id","map","personaId","nombre1","nombre2","nombre_otros","apellido1","apellido2","apellido_casada","email","fecha_nacimiento","genero","Genero","descripcion","estado","Estado","nombreCompleto","key","moment","format","style","textAlign","btoa","onClick","withReactContent","Swal","fire","title","text","type","showCloseButton","showCancelButton","then","willDelete","value","method","alert_exitoso","listActual","alert_warning","NoAutorizado","PersonaPage","Heading","as","$","DataTable","require","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","destroy"],"mappings":"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","file":"static/js/24.b875d566.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Table\r\n} from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { limpiarEstiloTabla, asignarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 12;\r\nexport const PersonaListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [personas, setPersonas] = useState([]);\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const GetPersonas = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            setLoading(true);\r\n            let response = await callApi(`persona?&estadoId=1;2`);\r\n            if (response) {\r\n                setPersonas(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n        asignarEstiloTabla(\"#mytable\");\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`persona/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = personas.filter(item => item.personaId !== id);\r\n                    setPersonas(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetPersonas();\r\n    }, [accesos]);\r\n\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Link variant=\"success\" className=\"btn-sm btn-round has-ripple\" to=\"/base/catalogo/personaupsert\"><i className=\"feather icon-plus\" /> Nueva Persona</Link>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Nombre</th>\r\n                                                            <th>Fecha de Nacimiento</th>\r\n                                                            <th>Correo</th>\r\n                                                            <th>Genero</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            personas.map((item) => {\r\n                                                                const { personaId,\r\n                                                                    nombre1,\r\n                                                                    nombre2,\r\n                                                                    nombre_otros,\r\n                                                                    apellido1,\r\n                                                                    apellido2,\r\n                                                                    apellido_casada,\r\n                                                                    email,\r\n                                                                    fecha_nacimiento, Genero: { descripcion: genero }, Estado: { descripcion: estado } } = item;\r\n                                                                let nombreCompleto = nombre1;\r\n                                                                if (nombre2) {\r\n                                                                    nombreCompleto += \" \" + nombre2;\r\n                                                                }\r\n                                                                if (nombre_otros) {\r\n                                                                    nombreCompleto += \" \" + nombre_otros;\r\n                                                                }\r\n                                                                nombreCompleto += \" \" + apellido1;\r\n\r\n                                                                if (apellido2) {\r\n                                                                    nombreCompleto += \" \" + apellido2;\r\n                                                                }\r\n                                                                if (apellido_casada) {\r\n                                                                    nombreCompleto += \" \" + apellido_casada;\r\n                                                                }\r\n                                                                return (\r\n                                                                    <tr key={personaId}>\r\n                                                                        <td>{personaId}</td>\r\n                                                                        <td>{nombreCompleto}</td>\r\n                                                                        <td>{moment(fecha_nacimiento).format('DD/MM/YYYY')}</td>\r\n                                                                        <td>{email}</td>\r\n                                                                        <td>{genero}</td>\r\n                                                                        <td>{estado}</td>\r\n                                                                        {\r\n                                                                            accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                                {\r\n                                                                                    accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                    <Link className=\"btn-icon btn btn-info btn-sm\" to={`/base/catalogo/personaupsert/${btoa(`idpersona=${item.personaId}`)}`}><i className=\"feather icon-edit\" /></Link>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                    accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                    <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(item.personaId) }}><i className=\"feather icon-trash-2\" /></button>}\r\n                                                                            </td>\r\n                                                                        }\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { PersonaListar } from '../components/base/PersonaListar';\r\nconst PersonaPage = () => {\r\n    return (\r\n        <PersonaListar />\r\n    )\r\n}\r\n\r\nexport default PersonaPage;","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando información\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}