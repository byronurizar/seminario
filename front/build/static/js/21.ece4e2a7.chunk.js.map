{"version":3,"sources":["App/components/base/EstadoCivilUpSert.js","App/components/base/EstadoCivilListar.js","App/pages/EstadoCivilPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["EstadoCivilUpSert","dataInicial","abrirModal","setAbrirModal","GetCatEstadoCivil","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","estado_civilId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","descripcion","onChange","errorMessage","placeholder","autoComplete","style","textTransform","type","estadoId","className","onClick","EstadoCivilListar","state","useSelector","accesos","setAccesos","catEstadoCivil","setCatEstadoCivil","initData","setdataInicial","find","acceso","accesoId","limpiarEstiloTabla","asignarEstiloTabla","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","EstadoCivilPage","Heading","$","DataTable","require","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","destroy"],"mappings":"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","file":"static/js/21.ece4e2a7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const EstadoCivilUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetCatEstadoCivil }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('estadocivil', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Nuevo estado civil registrado exitosamente\");\r\n            GetCatEstadoCivil();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('estadocivil', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetCatEstadoCivil();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.estado_civilId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.estado_civilId > 0 ? 'Actualizar Estado Civil' : 'Nuevo Estado Civil'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripción</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripción\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.estado_civilId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.estado_civilId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { EstadoCivilUpSert } from './EstadoCivilUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nimport { asignarEstiloTabla, limpiarEstiloTabla } from '../../../helpers/estiloTabla';\r\nconst menuId = 4;\r\nexport const EstadoCivilListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catEstadoCivil, setCatEstadoCivil] = useState([]);\r\n    const initData = {\r\n        estado_civilId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetCatEstadoCivil = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            setLoading(true);\r\n            let response = await callApi('estadocivil?estadoId=1;2');\r\n            if (response) {\r\n                setCatEstadoCivil(response);\r\n            }\r\n            setLoading(false);\r\n            asignarEstiloTabla(\"#mytable\");\r\n        }\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { estado_civilId, descripcion, estadoId } = catEstadoCivil.find(item => item.estado_civilId === id);\r\n        setdataInicial({\r\n            estado_civilId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`estadocivil/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = catEstadoCivil.filter(item => item.estado_civilId !== id);\r\n                    setCatEstadoCivil(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetCatEstadoCivil();\r\n    }, [accesos]);\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Estado Civil</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Estado Civil</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Código</th>\r\n                                                            <th>Descripción</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            catEstadoCivil.map(({ estado_civilId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={estado_civilId}>\r\n                                                                    <td>{estado_civilId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(estado_civilId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(estado_civilId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <EstadoCivilUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetCatEstadoCivil={GetCatEstadoCivil} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { EstadoCivilListar } from '../components/base/EstadoCivilListar';\r\n\r\nconst EstadoCivilPage = () => {\r\n    return (\r\n      <EstadoCivilListar/>\r\n    )\r\n}\r\n\r\nexport default EstadoCivilPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando información\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}