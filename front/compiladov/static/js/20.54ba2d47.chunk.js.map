{"version":3,"sources":["App/components/base/DepartamentoUpSert.js","App/components/base/DepartamentoListar.js","App/pages/DepartamentoPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["DepartamentoUpSert","dataInicial","abrirModal","setAbrirModal","catRegiones","GetDepartamentos","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","departamentoId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","onChange","errorMessage","placeholder","autoComplete","readOnly","type","regionId","map","descripcion","key","style","textTransform","estadoId","className","onClick","DepartamentoListar","state","useSelector","accesos","setAccesos","setRegiones","departamentos","setDepartamentos","initData","setdataInicial","GetRegiones","find","acceso","menuId","accesoId","limpiarEstiloTabla","asignarEstiloTabla","useEffect","misAccesos","filter","item","GetAccesosByMenuId","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","region","Region","estado","Estado","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","DepartamentoPage","Heading","$","DataTable","require","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","destroy"],"mappings":"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","file":"static/js/20.54ba2d47.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const DepartamentoUpSert = ({ dataInicial, abrirModal, setAbrirModal, catRegiones, GetDepartamentos }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('departamento', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Departamento registrado exitosamente\");\r\n            GetDepartamentos();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('departamento', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetDepartamentos();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.departamentoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la informaci√≥n solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.departamentoId > 0 ? 'Actualizar departamento' : 'Nuevo departamento'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"departamentoId\">C√≥digo de departamento</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"departamentoId\"\r\n                                            id=\"departamentoId\"\r\n                                            required\r\n                                            value={values.departamentoId}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"C√≥digo Departamento\"\r\n                                            autoComplete=\"off\"\r\n                                            readOnly={dataInicial.departamentoId > 0}\r\n                                            type=\"number\"\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"regionId\">Region</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"regionId\"\r\n                                            id=\"regionId\"\r\n                                            required\r\n                                            value={values.regionId}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}>\r\n                                            <option value=\"\">Seleccione una Regi√≥n</option>\r\n                                            {\r\n                                                catRegiones.map(({ regionId, descripcion }) => (\r\n                                                    <option value={regionId} key={regionId}>{descripcion}</option>\r\n                                                )\r\n                                                )\r\n                                            }\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            style={{ textTransform: textTransform }}\r\n                                            placeholder=\"Nombre departamento\"\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.departamentoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.departamentoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { DepartamentoUpSert } from './DepartamentoUpSert';\r\nimport { limpiarEstiloTabla, asignarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 9;\r\nconst menuIdRegion = 8;\r\nexport const DepartamentoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [catRegiones, setRegiones] = useState([]);\r\n    const [departamentos, setDepartamentos] = useState([]);\r\n    const initData = {\r\n        departamentoId: '',\r\n        regionId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => (item.menuId === menuId || item.menuId === menuIdRegion));\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetRegiones = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdRegion && acceso.accesoId === 3)) {\r\n            let response = await callApi('region?include=0?estadoId=1');\r\n            if (response) {\r\n                setRegiones(response);\r\n            }\r\n        } else {\r\n            setRegiones([{ regionId: '', descripcion: 'No esta autorizado' }]);\r\n        }\r\n    }\r\n    const GetDepartamentos = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            setLoading(true);\r\n            let response = await callApi('departamento?estadoId=1;2');\r\n            if (response) {\r\n                setDepartamentos(response);\r\n            }\r\n            setLoading(false);\r\n            asignarEstiloTabla(\"#mytable\");\r\n        }\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { departamentoId, regionId, descripcion, estadoId } = departamentos.find(item => item.departamentoId === id);\r\n        setdataInicial({\r\n            departamentoId,\r\n            regionId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`departamento/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = departamentos.filter(item => item.departamentoId !== id);\r\n                    setDepartamentos(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se elimin√≥ ning√∫n elemento');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetDepartamentos();\r\n        GetRegiones();\r\n    }, [accesos]);\r\n\r\n    return (\r\n        <Aux>\r\n\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Departamentos</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar departamento</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Departamento</th>\r\n                                                            <th>Regi√≥n</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => (acceso.menuId === menuId && acceso.accesoId === 2) || (acceso.menuId === menuId && acceso.accesoId === 4)) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            departamentos.map(({ departamentoId, descripcion, Region: { descripcion: region }, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={departamentoId}>\r\n                                                                    <td>{departamentoId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{region}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => (acceso.menuId === menuId && acceso.accesoId === 2) || (acceso.menuId === menuId && acceso.accesoId === 4)) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(departamentoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(departamentoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <DepartamentoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} catRegiones={catRegiones} GetDepartamentos={GetDepartamentos} dataInicial={dataInicial} />\r\n                            }\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {DepartamentoListar}  from '../components/base/DepartamentoListar'\r\n\r\nconst DepartamentoPage = () => {\r\n    return (\r\n        <DepartamentoListar/>\r\n    )\r\n}\r\n\r\nexport default DepartamentoPage\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Informaci√≥n!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignaci√≥n de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando informaci√≥n\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualizaci√≥n  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualizaci√≥n del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logr√≥ encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}